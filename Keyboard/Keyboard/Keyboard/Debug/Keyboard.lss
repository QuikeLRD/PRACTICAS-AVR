
Keyboard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000003be  00000452  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000452  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000481  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  0000048f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002c77  00000000  00000000  000005a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000836  00000000  00000000  0000321e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bb1  00000000  00000000  00003a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00004608  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000021a  00000000  00000000  000047f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000018fa  00000000  00000000  00004a12  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  0000630c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000039c  0000039c  00000430  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000063f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.LEE_TECLADO 00000104  000000b0  000000b0  00000144  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.BARRE_TECLADO 00000028  00000320  00000320  000003b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .data.VALOR_TECLADO 00000001  00800073  000003bd  00000451  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .text.ENVIA_CMD 00000066  00000228  00000228  000002bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_INICIALIZA 00000026  00000348  00000348  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.ENVIA_DATO 00000066  0000028e  0000028e  00000322  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.ENVIA_CADENA 0000002c  000002f4  000002f4  00000388  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LIMPIA_LCD 00000008  00000384  00000384  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.POS_LINEA1 00000008  0000038c  0000038c  00000420  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.POS_LINEA2 00000008  00000394  00000394  00000428  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.main    00000074  000001b4  000001b4  00000248  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .data.mensaje2 00000008  0080006b  000003b5  00000449  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .data.mensaje 0000000b  00800060  000003aa  0000043e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 27 .text.__dummy_fini 00000002  000003a4  000003a4  00000438  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__dummy_funcs_on_exit 00000002  000003a6  000003a6  0000043a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_simulator_exit 00000002  000003a8  000003a8  0000043c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.exit    00000016  0000036e  0000036e  00000402  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text._Exit   00000004  000003a0  000003a0  00000434  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
   8:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
   c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  10:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  14:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  18:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  1c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  20:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  24:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  28:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  2c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  30:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  34:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  38:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  3c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  40:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  44:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  48:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  4c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>
  50:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 74       	andi	r16, 0x40	; 64
  58:	00 03       	mulsu	r16, r16
  5a:	aa 00       	.word	0x00aa	; ????

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf e5       	ldi	r28, 0x5F	; 95
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	e4 e5       	ldi	r30, 0x54	; 84
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	17 c0       	rjmp	.+46     	; 0x9e <__do_clear_bss+0x8>
  70:	b5 91       	lpm	r27, Z+
  72:	a5 91       	lpm	r26, Z+
  74:	35 91       	lpm	r19, Z+
  76:	25 91       	lpm	r18, Z+
  78:	05 91       	lpm	r16, Z+
  7a:	07 fd       	sbrc	r16, 7
  7c:	0c c0       	rjmp	.+24     	; 0x96 <__do_clear_bss>
  7e:	95 91       	lpm	r25, Z+
  80:	85 91       	lpm	r24, Z+
  82:	ef 01       	movw	r28, r30
  84:	f9 2f       	mov	r31, r25
  86:	e8 2f       	mov	r30, r24
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 17       	cp	r26, r18
  8e:	b3 07       	cpc	r27, r19
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0x20>
  92:	fe 01       	movw	r30, r28
  94:	04 c0       	rjmp	.+8      	; 0x9e <__do_clear_bss+0x8>

00000096 <__do_clear_bss>:
  96:	1d 92       	st	X+, r1
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	e1 f7       	brne	.-8      	; 0x96 <__do_clear_bss>
  9e:	eb 35       	cpi	r30, 0x5B	; 91
  a0:	f4 07       	cpc	r31, r20
  a2:	31 f7       	brne	.-52     	; 0x70 <__do_copy_data+0x8>
  a4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
  a8:	0c 94 b7 01 	jmp	0x36e	; 0x36e <exit>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>

Disassembly of section .text:

0000039c <__bad_interrupt>:
 39c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.LEE_TECLADO:

000000b0 <LEE_TECLADO>:
char VALOR_TECLADO=' ';


char LEE_TECLADO()
{
	switch(PORTD)
  b0:	82 b3       	in	r24, 0x12	; 18
  b2:	8f 3b       	cpi	r24, 0xBF	; 191
  b4:	09 f4       	brne	.+2      	; 0xb8 <LEE_TECLADO+0x8>
  b6:	44 c0       	rjmp	.+136    	; 0x140 <LEE_TECLADO+0x90>
  b8:	20 f4       	brcc	.+8      	; 0xc2 <LEE_TECLADO+0x12>
  ba:	8f 37       	cpi	r24, 0x7F	; 127
  bc:	09 f4       	brne	.+2      	; 0xc0 <LEE_TECLADO+0x10>
  be:	5c c0       	rjmp	.+184    	; 0x178 <LEE_TECLADO+0xc8>
  c0:	76 c0       	rjmp	.+236    	; 0x1ae <LEE_TECLADO+0xfe>
  c2:	8f 3d       	cpi	r24, 0xDF	; 223
  c4:	01 f1       	breq	.+64     	; 0x106 <LEE_TECLADO+0x56>
  c6:	8f 3e       	cpi	r24, 0xEF	; 239
  c8:	09 f0       	breq	.+2      	; 0xcc <LEE_TECLADO+0x1c>
  ca:	71 c0       	rjmp	.+226    	; 0x1ae <LEE_TECLADO+0xfe>
	{
		case COL1:
		switch(PIND&0X0F)
  cc:	80 b3       	in	r24, 0x10	; 16
  ce:	8f 70       	andi	r24, 0x0F	; 15
  d0:	8b 30       	cpi	r24, 0x0B	; 11
  d2:	89 f0       	breq	.+34     	; 0xf6 <LEE_TECLADO+0x46>
  d4:	18 f4       	brcc	.+6      	; 0xdc <LEE_TECLADO+0x2c>
  d6:	87 30       	cpi	r24, 0x07	; 7
  d8:	91 f0       	breq	.+36     	; 0xfe <LEE_TECLADO+0x4e>
  da:	69 c0       	rjmp	.+210    	; 0x1ae <LEE_TECLADO+0xfe>
  dc:	8d 30       	cpi	r24, 0x0D	; 13
  de:	39 f0       	breq	.+14     	; 0xee <LEE_TECLADO+0x3e>
  e0:	8e 30       	cpi	r24, 0x0E	; 14
  e2:	09 f0       	breq	.+2      	; 0xe6 <LEE_TECLADO+0x36>
  e4:	64 c0       	rjmp	.+200    	; 0x1ae <LEE_TECLADO+0xfe>
		{
			case FIL1: VALOR_TECLADO='1'; break;//0X0E
  e6:	81 e3       	ldi	r24, 0x31	; 49
  e8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
  ec:	60 c0       	rjmp	.+192    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL2: VALOR_TECLADO='2'; break;//0X0D:
  ee:	82 e3       	ldi	r24, 0x32	; 50
  f0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
  f4:	5c c0       	rjmp	.+184    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL3: VALOR_TECLADO='3'; break;//0X0B
  f6:	83 e3       	ldi	r24, 0x33	; 51
  f8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
  fc:	58 c0       	rjmp	.+176    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL4: VALOR_TECLADO='A'; break;//0X07
  fe:	81 e4       	ldi	r24, 0x41	; 65
 100:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 104:	54 c0       	rjmp	.+168    	; 0x1ae <LEE_TECLADO+0xfe>
		}
		break;
		case COL2:
		switch(PIND&0X0F)
 106:	80 b3       	in	r24, 0x10	; 16
 108:	8f 70       	andi	r24, 0x0F	; 15
 10a:	8b 30       	cpi	r24, 0x0B	; 11
 10c:	89 f0       	breq	.+34     	; 0x130 <LEE_TECLADO+0x80>
 10e:	18 f4       	brcc	.+6      	; 0x116 <LEE_TECLADO+0x66>
 110:	87 30       	cpi	r24, 0x07	; 7
 112:	91 f0       	breq	.+36     	; 0x138 <LEE_TECLADO+0x88>
 114:	4c c0       	rjmp	.+152    	; 0x1ae <LEE_TECLADO+0xfe>
 116:	8d 30       	cpi	r24, 0x0D	; 13
 118:	39 f0       	breq	.+14     	; 0x128 <LEE_TECLADO+0x78>
 11a:	8e 30       	cpi	r24, 0x0E	; 14
 11c:	09 f0       	breq	.+2      	; 0x120 <LEE_TECLADO+0x70>
 11e:	47 c0       	rjmp	.+142    	; 0x1ae <LEE_TECLADO+0xfe>
		{
			case FIL1: VALOR_TECLADO='4'; break;
 120:	84 e3       	ldi	r24, 0x34	; 52
 122:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 126:	43 c0       	rjmp	.+134    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL2: VALOR_TECLADO='5'; break;
 128:	85 e3       	ldi	r24, 0x35	; 53
 12a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 12e:	3f c0       	rjmp	.+126    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL3: VALOR_TECLADO='6'; break;
 130:	86 e3       	ldi	r24, 0x36	; 54
 132:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 136:	3b c0       	rjmp	.+118    	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL4: VALOR_TECLADO='B'; break;
 138:	82 e4       	ldi	r24, 0x42	; 66
 13a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 13e:	37 c0       	rjmp	.+110    	; 0x1ae <LEE_TECLADO+0xfe>
		}
		break;
		case COL3:
		switch(PIND&0X0F)
 140:	80 b3       	in	r24, 0x10	; 16
 142:	8f 70       	andi	r24, 0x0F	; 15
 144:	8b 30       	cpi	r24, 0x0B	; 11
 146:	81 f0       	breq	.+32     	; 0x168 <LEE_TECLADO+0xb8>
 148:	18 f4       	brcc	.+6      	; 0x150 <LEE_TECLADO+0xa0>
 14a:	87 30       	cpi	r24, 0x07	; 7
 14c:	89 f0       	breq	.+34     	; 0x170 <LEE_TECLADO+0xc0>
 14e:	2f c0       	rjmp	.+94     	; 0x1ae <LEE_TECLADO+0xfe>
 150:	8d 30       	cpi	r24, 0x0D	; 13
 152:	31 f0       	breq	.+12     	; 0x160 <LEE_TECLADO+0xb0>
 154:	8e 30       	cpi	r24, 0x0E	; 14
 156:	59 f5       	brne	.+86     	; 0x1ae <LEE_TECLADO+0xfe>
		{
			case FIL1: VALOR_TECLADO='7'; break;
 158:	87 e3       	ldi	r24, 0x37	; 55
 15a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 15e:	27 c0       	rjmp	.+78     	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL2: VALOR_TECLADO='8'; break;
 160:	88 e3       	ldi	r24, 0x38	; 56
 162:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 166:	23 c0       	rjmp	.+70     	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL3: VALOR_TECLADO='9'; break;
 168:	89 e3       	ldi	r24, 0x39	; 57
 16a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 16e:	1f c0       	rjmp	.+62     	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL4: VALOR_TECLADO='C'; break;
 170:	83 e4       	ldi	r24, 0x43	; 67
 172:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 176:	1b c0       	rjmp	.+54     	; 0x1ae <LEE_TECLADO+0xfe>
		}
		break;
		case COL4:
		switch(PIND&0X0F)
 178:	80 b3       	in	r24, 0x10	; 16
 17a:	8f 70       	andi	r24, 0x0F	; 15
 17c:	8b 30       	cpi	r24, 0x0B	; 11
 17e:	81 f0       	breq	.+32     	; 0x1a0 <LEE_TECLADO+0xf0>
 180:	18 f4       	brcc	.+6      	; 0x188 <LEE_TECLADO+0xd8>
 182:	87 30       	cpi	r24, 0x07	; 7
 184:	89 f0       	breq	.+34     	; 0x1a8 <LEE_TECLADO+0xf8>
 186:	13 c0       	rjmp	.+38     	; 0x1ae <LEE_TECLADO+0xfe>
 188:	8d 30       	cpi	r24, 0x0D	; 13
 18a:	31 f0       	breq	.+12     	; 0x198 <LEE_TECLADO+0xe8>
 18c:	8e 30       	cpi	r24, 0x0E	; 14
 18e:	79 f4       	brne	.+30     	; 0x1ae <LEE_TECLADO+0xfe>
		{
			case FIL1: VALOR_TECLADO='*'; break;
 190:	8a e2       	ldi	r24, 0x2A	; 42
 192:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 196:	0b c0       	rjmp	.+22     	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL2: VALOR_TECLADO='0'; break;
 198:	80 e3       	ldi	r24, 0x30	; 48
 19a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 19e:	07 c0       	rjmp	.+14     	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL3: VALOR_TECLADO='#'; break;
 1a0:	83 e2       	ldi	r24, 0x23	; 35
 1a2:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
 1a6:	03 c0       	rjmp	.+6      	; 0x1ae <LEE_TECLADO+0xfe>
			case FIL4: VALOR_TECLADO='D'; break;
 1a8:	84 e4       	ldi	r24, 0x44	; 68
 1aa:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <VALOR_TECLADO>
		}
		break;
	}
	return VALOR_TECLADO;
}
 1ae:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <VALOR_TECLADO>
 1b2:	08 95       	ret

Disassembly of section .text.BARRE_TECLADO:

00000320 <BARRE_TECLADO>:
void BARRE_TECLADO()
{
	switch(PORTD)
 320:	82 b3       	in	r24, 0x12	; 18
 322:	8f 3d       	cpi	r24, 0xDF	; 223
 324:	41 f0       	breq	.+16     	; 0x336 <BARRE_TECLADO+0x16>
 326:	8f 3e       	cpi	r24, 0xEF	; 239
 328:	19 f0       	breq	.+6      	; 0x330 <BARRE_TECLADO+0x10>
 32a:	8f 3b       	cpi	r24, 0xBF	; 191
 32c:	51 f4       	brne	.+20     	; 0x342 <BARRE_TECLADO+0x22>
 32e:	06 c0       	rjmp	.+12     	; 0x33c <BARRE_TECLADO+0x1c>
	{
		case COL1: PORTD=COL2; break;
 330:	8f ed       	ldi	r24, 0xDF	; 223
 332:	82 bb       	out	0x12, r24	; 18
 334:	08 95       	ret
		case COL2: PORTD=COL3; break;
 336:	8f eb       	ldi	r24, 0xBF	; 191
 338:	82 bb       	out	0x12, r24	; 18
 33a:	08 95       	ret
		case COL3: PORTD=COL4; break;
 33c:	8f e7       	ldi	r24, 0x7F	; 127
 33e:	82 bb       	out	0x12, r24	; 18
 340:	08 95       	ret
		//case COL4: PORTD=COL1; break;
		default: PORTD=COL1;
 342:	8f ee       	ldi	r24, 0xEF	; 239
 344:	82 bb       	out	0x12, r24	; 18
 346:	08 95       	ret

Disassembly of section .text.ENVIA_CMD:

00000228 <ENVIA_CMD>:
	ENVIA_CMD(0x18);
}

void REGRESO_CASA(void)
{
	ENVIA_CMD(0x02);
 228:	98 2f       	mov	r25, r24
 22a:	90 7f       	andi	r25, 0xF0	; 240
 22c:	95 bb       	out	0x15, r25	; 21
 22e:	95 b3       	in	r25, 0x15	; 21
 230:	9b 7f       	andi	r25, 0xFB	; 251
 232:	95 bb       	out	0x15, r25	; 21
 234:	95 b3       	in	r25, 0x15	; 21
 236:	98 60       	ori	r25, 0x08	; 8
 238:	95 bb       	out	0x15, r25	; 21
 23a:	e9 ef       	ldi	r30, 0xF9	; 249
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	31 97       	sbiw	r30, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <ENVIA_CMD+0x16>
 242:	00 c0       	rjmp	.+0      	; 0x244 <ENVIA_CMD+0x1c>
 244:	00 00       	nop
 246:	95 b3       	in	r25, 0x15	; 21
 248:	97 7f       	andi	r25, 0xF7	; 247
 24a:	95 bb       	out	0x15, r25	; 21
 24c:	e3 ec       	ldi	r30, 0xC3	; 195
 24e:	f9 e0       	ldi	r31, 0x09	; 9
 250:	31 97       	sbiw	r30, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <ENVIA_CMD+0x28>
 254:	00 c0       	rjmp	.+0      	; 0x256 <ENVIA_CMD+0x2e>
 256:	00 00       	nop
 258:	f0 e1       	ldi	r31, 0x10	; 16
 25a:	8f 9f       	mul	r24, r31
 25c:	c0 01       	movw	r24, r0
 25e:	11 24       	eor	r1, r1
 260:	85 bb       	out	0x15, r24	; 21
 262:	85 b3       	in	r24, 0x15	; 21
 264:	8b 7f       	andi	r24, 0xFB	; 251
 266:	85 bb       	out	0x15, r24	; 21
 268:	85 b3       	in	r24, 0x15	; 21
 26a:	88 60       	ori	r24, 0x08	; 8
 26c:	85 bb       	out	0x15, r24	; 21
 26e:	89 ef       	ldi	r24, 0xF9	; 249
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <ENVIA_CMD+0x4a>
 276:	00 c0       	rjmp	.+0      	; 0x278 <ENVIA_CMD+0x50>
 278:	00 00       	nop
 27a:	85 b3       	in	r24, 0x15	; 21
 27c:	87 7f       	andi	r24, 0xF7	; 247
 27e:	85 bb       	out	0x15, r24	; 21
 280:	e3 ec       	ldi	r30, 0xC3	; 195
 282:	f9 e0       	ldi	r31, 0x09	; 9
 284:	31 97       	sbiw	r30, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <ENVIA_CMD+0x5c>
 288:	00 c0       	rjmp	.+0      	; 0x28a <ENVIA_CMD+0x62>
 28a:	00 00       	nop
 28c:	08 95       	ret

Disassembly of section .text.LCD_INICIALIZA:

00000348 <LCD_INICIALIZA>:
 348:	82 e0       	ldi	r24, 0x02	; 2
 34a:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 34e:	88 e2       	ldi	r24, 0x28	; 40
 350:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 354:	8e e0       	ldi	r24, 0x0E	; 14
 356:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 35a:	86 e0       	ldi	r24, 0x06	; 6
 35c:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 36c:	08 95       	ret

Disassembly of section .text.ENVIA_DATO:

0000028e <ENVIA_DATO>:
 28e:	98 2f       	mov	r25, r24
 290:	90 7f       	andi	r25, 0xF0	; 240
 292:	95 bb       	out	0x15, r25	; 21
 294:	95 b3       	in	r25, 0x15	; 21
 296:	9c 60       	ori	r25, 0x0C	; 12
 298:	95 bb       	out	0x15, r25	; 21
 29a:	e9 ef       	ldi	r30, 0xF9	; 249
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	31 97       	sbiw	r30, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <ENVIA_DATO+0x10>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <ENVIA_DATO+0x16>
 2a4:	00 00       	nop
 2a6:	95 b3       	in	r25, 0x15	; 21
 2a8:	97 7f       	andi	r25, 0xF7	; 247
 2aa:	95 bb       	out	0x15, r25	; 21
 2ac:	95 b3       	in	r25, 0x15	; 21
 2ae:	9b 7f       	andi	r25, 0xFB	; 251
 2b0:	95 bb       	out	0x15, r25	; 21
 2b2:	e3 ec       	ldi	r30, 0xC3	; 195
 2b4:	f9 e0       	ldi	r31, 0x09	; 9
 2b6:	31 97       	sbiw	r30, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <ENVIA_DATO+0x28>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <ENVIA_DATO+0x2e>
 2bc:	00 00       	nop
 2be:	f0 e1       	ldi	r31, 0x10	; 16
 2c0:	8f 9f       	mul	r24, r31
 2c2:	c0 01       	movw	r24, r0
 2c4:	11 24       	eor	r1, r1
 2c6:	85 bb       	out	0x15, r24	; 21
 2c8:	85 b3       	in	r24, 0x15	; 21
 2ca:	8c 60       	ori	r24, 0x0C	; 12
 2cc:	85 bb       	out	0x15, r24	; 21
 2ce:	89 ef       	ldi	r24, 0xF9	; 249
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <ENVIA_DATO+0x44>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <ENVIA_DATO+0x4a>
 2d8:	00 00       	nop
 2da:	85 b3       	in	r24, 0x15	; 21
 2dc:	87 7f       	andi	r24, 0xF7	; 247
 2de:	85 bb       	out	0x15, r24	; 21
 2e0:	85 b3       	in	r24, 0x15	; 21
 2e2:	8b 7f       	andi	r24, 0xFB	; 251
 2e4:	85 bb       	out	0x15, r24	; 21
 2e6:	e3 ec       	ldi	r30, 0xC3	; 195
 2e8:	f9 e0       	ldi	r31, 0x09	; 9
 2ea:	31 97       	sbiw	r30, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <ENVIA_DATO+0x5c>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <ENVIA_DATO+0x62>
 2f0:	00 00       	nop
 2f2:	08 95       	ret

Disassembly of section .text.ENVIA_CADENA:

000002f4 <ENVIA_CADENA>:
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	8c 01       	movw	r16, r24
 2fe:	c0 e0       	ldi	r28, 0x00	; 0
 300:	d0 e0       	ldi	r29, 0x00	; 0
 302:	03 c0       	rjmp	.+6      	; 0x30a <ENVIA_CADENA+0x16>
 304:	0e 94 47 01 	call	0x28e	; 0x28e <ENVIA_DATO>
 308:	21 96       	adiw	r28, 0x01	; 1
 30a:	f8 01       	movw	r30, r16
 30c:	ec 0f       	add	r30, r28
 30e:	fd 1f       	adc	r31, r29
 310:	80 81       	ld	r24, Z
 312:	81 11       	cpse	r24, r1
 314:	f7 cf       	rjmp	.-18     	; 0x304 <ENVIA_CADENA+0x10>
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	1f 91       	pop	r17
 31c:	0f 91       	pop	r16
 31e:	08 95       	ret

Disassembly of section .text.LIMPIA_LCD:

00000384 <LIMPIA_LCD>:
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 38a:	08 95       	ret

Disassembly of section .text.POS_LINEA1:

0000038c <POS_LINEA1>:

void POS_LINEA1(char posicion)
{
	char linea1 = 0x80;
	posicion = posicion | linea1;
	ENVIA_CMD(posicion);
 38c:	80 68       	ori	r24, 0x80	; 128
 38e:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 392:	08 95       	ret

Disassembly of section .text.POS_LINEA2:

00000394 <POS_LINEA2>:

void POS_LINEA2(char posicion)
{
	char linea2 = 0xC0;
	posicion = posicion | linea2;
	ENVIA_CMD(posicion);
 394:	80 6c       	ori	r24, 0xC0	; 192
 396:	0e 94 14 01 	call	0x228	; 0x228 <ENVIA_CMD>
 39a:	08 95       	ret

Disassembly of section .text.main:

000001b4 <main>:
char mensaje[] = "Practica 3";
char mensaje2[] ="Teclado";

int main(void)
{
	DDRC = 0xFF;
 1b4:	8f ef       	ldi	r24, 0xFF	; 255
 1b6:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xF0;
 1b8:	80 ef       	ldi	r24, 0xF0	; 240
 1ba:	81 bb       	out	0x11, r24	; 17
	
	LCD_INICIALIZA();
 1bc:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_INICIALIZA>
	LIMPIA_LCD();
 1c0:	0e 94 c2 01 	call	0x384	; 0x384 <LIMPIA_LCD>

	POS_LINEA1(0);
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	0e 94 c6 01 	call	0x38c	; 0x38c <POS_LINEA1>
	ENVIA_CADENA(mensaje);
 1ca:	80 e6       	ldi	r24, 0x60	; 96
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <ENVIA_CADENA>
	POS_LINEA2(0);
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	0e 94 ca 01 	call	0x394	; 0x394 <POS_LINEA2>
	ENVIA_CADENA(mensaje2);
 1d8:	8b e6       	ldi	r24, 0x6B	; 107
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <ENVIA_CADENA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e0:	2f ef       	ldi	r18, 0xFF	; 255
 1e2:	80 e7       	ldi	r24, 0x70	; 112
 1e4:	92 e0       	ldi	r25, 0x02	; 2
 1e6:	21 50       	subi	r18, 0x01	; 1
 1e8:	80 40       	sbci	r24, 0x00	; 0
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x32>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0x3c>
 1f0:	00 00       	nop
	_delay_ms(800);

	LIMPIA_LCD();
 1f2:	0e 94 c2 01 	call	0x384	; 0x384 <LIMPIA_LCD>

	char tecla = ' ';
	while (1)
	{
		tecla = LEE_TECLADO();
 1f6:	0e 94 58 00 	call	0xb0	; 0xb0 <__data_load_end>
		if (tecla != ' ')
 1fa:	80 32       	cpi	r24, 0x20	; 32
 1fc:	61 f0       	breq	.+24     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
		{
			ENVIA_DATO(tecla);
 1fe:	0e 94 47 01 	call	0x28e	; 0x28e <ENVIA_DATO>
			while(LEE_TECLADO() != ' '); // Espera a que se suelte
 202:	0e 94 58 00 	call	0xb0	; 0xb0 <__data_load_end>
 206:	80 32       	cpi	r24, 0x20	; 32
 208:	e1 f7       	brne	.-8      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 20a:	87 ea       	ldi	r24, 0xA7	; 167
 20c:	91 e6       	ldi	r25, 0x61	; 97
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
 212:	00 c0       	rjmp	.+0      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 214:	00 00       	nop
			_delay_ms(100);
		}
		BARRE_TECLADO();
 216:	0e 94 90 01 	call	0x320	; 0x320 <BARRE_TECLADO>
 21a:	81 ee       	ldi	r24, 0xE1	; 225
 21c:	94 e0       	ldi	r25, 0x04	; 4
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 222:	00 c0       	rjmp	.+0      	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 224:	00 00       	nop
 226:	e7 cf       	rjmp	.-50     	; 0x1f6 <main+0x42>

Disassembly of section .text.__dummy_fini:

000003a4 <_fini>:
 3a4:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000003a6 <__funcs_on_exit>:
 3a6:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000003a8 <__simulator_exit>:
 3a8:	08 95       	ret

Disassembly of section .text.exit:

0000036e <exit>:
 36e:	ec 01       	movw	r28, r24
 370:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__funcs_on_exit>
 374:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <_fini>
 378:	ce 01       	movw	r24, r28
 37a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__simulator_exit>
 37e:	ce 01       	movw	r24, r28
 380:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_Exit>

Disassembly of section .text._Exit:

000003a0 <_Exit>:
 3a0:	0e 94 56 00 	call	0xac	; 0xac <_exit>
